// Generated by purs bundle 0.13.8
var PS = {};
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeForeignProcedure = function(args) {
      return function (stmt) {
          return Function(wrap(args.slice()))();
          function wrap() {
              return !args.length ? stmt : 'return function (' + args.shift() + ') { ' + wrap() + ' };';
          }
      };
  };
})(PS["Data.Foreign.EasyFFI"] = PS["Data.Foreign.EasyFFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foreign.EasyFFI"] = $PS["Data.Foreign.EasyFFI"] || {};
  var exports = $PS["Data.Foreign.EasyFFI"];
  var $foreign = $PS["Data.Foreign.EasyFFI"];
  var unsafeForeignFunction = function (args) {
      return function (expr) {
          return $foreign.unsafeForeignProcedure(args)("return " + (expr + ";"));
      };
  };
  exports["unsafeForeignFunction"] = unsafeForeignFunction;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  "use strict";                

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["pi"] = $foreign.pi;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Utils"] = $PS["Graphics.Babylon.Utils"] || {};
  var exports = $PS["Graphics.Babylon.Utils"];
  var Data_Foreign_EasyFFI = $PS["Data.Foreign.EasyFFI"];
  var $$Math = $PS["Math"];                
  var oneDeg = $$Math.pi / 180.0;                       
  var ffi = Data_Foreign_EasyFFI.unsafeForeignFunction;
  exports["ffi"] = ffi;
  exports["oneDeg"] = oneDeg;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Camera"] = $PS["Graphics.Babylon.Camera"] || {};
  var exports = $PS["Graphics.Babylon.Camera"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var createArcRotate = Graphics_Babylon_Utils.ffi([ "name", "alpha", "beta", "radius", "target" ])("(function () {return new BABYLON.ArcRotateCamera(name, alpha, beta, radius, target)})");
  var attachControl = Graphics_Babylon_Utils.ffi([ "camera", "canvas", "bool" ])("(function () {\x0a         console.log(\"attachControl: camera=\", camera, \", canvas=\", canvas , \", bool=\", bool);\x0a         camera.attachControl(canvas, bool);\x0a  })\x0a  ");
  exports["createArcRotate"] = createArcRotate;
  exports["attachControl"] = attachControl;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Engine"] = $PS["Graphics.Babylon.Engine"] || {};
  var exports = $PS["Graphics.Babylon.Engine"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var runRenderLoop = Graphics_Babylon_Utils.ffi([ "engine", "renderFn" ])("(function () {return engine.runRenderLoop(renderFn)})");
  var createEngine = Graphics_Babylon_Utils.ffi([ "canvas" ])(" (function() {\x0a            console.log(\"hi from createEngine, canvas=\", canvas);\x0a            var e = new BABYLON.Engine(canvas, true);\x0a            console.log(\"hi from createEngine, e=\", e);\x0a            return e;\x0a        })\x0a    ");
  exports["runRenderLoop"] = runRenderLoop;
  exports["createEngine"] = createEngine;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Light"] = $PS["Graphics.Babylon.Light"] || {};
  var exports = $PS["Graphics.Babylon.Light"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var createHemisphericLight = Graphics_Babylon_Utils.ffi([ "name", "pos", "scene" ])("(function (){return new BABYLON.HemisphericLight(name, pos, scene)})");
  exports["createHemisphericLight"] = createHemisphericLight;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Material"] = $PS["Graphics.Babylon.Material"] || {};
  var exports = $PS["Graphics.Babylon.Material"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];
  var setDiffuseColor = Graphics_Babylon_Utils.ffi([ "mat", "color" ])(" (function () {\x0a         console.log(\"setDiffuseColor: mat=\", mat, \", color=\", color);\x0a       })\x0a  ");
  var green = Graphics_Babylon_Utils.ffi([ "" ])("BABYLON.Color3.Green");
  var createStandardMaterial = Graphics_Babylon_Utils.ffi([ "name", "scene" ])("(function () {return new BABYLON.StandardMaterial(name, scene)})");
  exports["green"] = green;
  exports["createStandardMaterial"] = createStandardMaterial;
  exports["setDiffuseColor"] = setDiffuseColor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Math.Vector"] = $PS["Graphics.Babylon.Math.Vector"] || {};
  var exports = $PS["Graphics.Babylon.Math.Vector"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var createVector3 = Graphics_Babylon_Utils.ffi([ "x", "y", "z" ])("(function () {return new BABYLON.Vector3(x, y, z)})()");
  exports["createVector3"] = createVector3;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Mesh"] = $PS["Graphics.Babylon.Mesh"] || {};
  var exports = $PS["Graphics.Babylon.Mesh"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var setPosition = Graphics_Babylon_Utils.ffi([ "mesh", "v3" ])("(function () {return mesh.position = v3})");
  var setMaterial = function (dictMaterial) {
      return Graphics_Babylon_Utils.ffi([ "mesh", "mat" ])("(function () {\x0a        console.log(\"setMaterial: mesh=\", mesh, \", mat=\", mat);\x0a        console.log(\"setMaterial: mesh.material=\", mesh.material);\x0a        mesh.material=mat;\x0a    })\x0a  ");
  };
  var createGround = Graphics_Babylon_Utils.ffi([ "name", "opt", "scene" ])("(function () {return BABYLON.MeshBuilder.CreateGround(name, opt, scene)})");
  var createBox = Graphics_Babylon_Utils.ffi([ "name", "opt", "scene" ])("(function () {return BABYLON.MeshBuilder.CreateBox(name, opt, scene)})");
  exports["createGround"] = createGround;
  exports["createBox"] = createBox;
  exports["setMaterial"] = setMaterial;
  exports["setPosition"] = setPosition;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Babylon.Scene"] = $PS["Graphics.Babylon.Scene"] || {};
  var exports = $PS["Graphics.Babylon.Scene"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var setActiveScene = Graphics_Babylon_Utils.ffi([ "scene" ])("(function () {BABYLON.VT_active_scene=scene})");
  var getCanvasById = Graphics_Babylon_Utils.ffi([ "id" ])("document.getElementById(id)");
  var create = Graphics_Babylon_Utils.ffi([ "engine" ])("(function () {\x0a        console.log(\"Scene.create: engine=\", engine);\x0a        var s= new BABYLON.Scene(engine);\x0a        console.log(\"Scene.create: s=\", s);\x0a        return s;\x0a      })\x0a  ");
  exports["create"] = create;
  exports["getCanvasById"] = getCanvasById;
  exports["setActiveScene"] = setActiveScene;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["MainScene"] = $PS["MainScene"] || {};
  var exports = $PS["MainScene"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Console = $PS["Effect.Console"];
  var Graphics_Babylon_Camera = $PS["Graphics.Babylon.Camera"];
  var Graphics_Babylon_Engine = $PS["Graphics.Babylon.Engine"];
  var Graphics_Babylon_Light = $PS["Graphics.Babylon.Light"];
  var Graphics_Babylon_Material = $PS["Graphics.Babylon.Material"];
  var Graphics_Babylon_Math_Vector = $PS["Graphics.Babylon.Math.Vector"];
  var Graphics_Babylon_Mesh = $PS["Graphics.Babylon.Mesh"];
  var Graphics_Babylon_Scene = $PS["Graphics.Babylon.Scene"];
  var Graphics_Babylon_Utils = $PS["Graphics.Babylon.Utils"];                
  var renderFn = Graphics_Babylon_Utils.ffi([ "" ])("(function () {\x0a            //console.log(\"now in renderFn\");\x0a            return BABYLON.VT_active_scene.render();\x0a          })()\x0a      ");
  var runMainScene = (function () {
      var dummyObj = {
          a: 7,
          b: 8
      };
      var canvas = Graphics_Babylon_Scene.getCanvasById("renderCanvas");
      return function __do() {
          Effect_Console.log("hello from MainScene toplevel")();
          var engine = Graphics_Babylon_Engine.createEngine(canvas)();
          var scene = Graphics_Babylon_Scene.create(engine)();
          Graphics_Babylon_Scene.setActiveScene(scene)();
          var camera = Graphics_Babylon_Camera.createArcRotate("camera")(Graphics_Babylon_Utils.oneDeg * 90.0)(Graphics_Babylon_Utils.oneDeg * 90.0)(45.0)(Graphics_Babylon_Math_Vector.createVector3(0.0)(0.0)(0.0))();
          Graphics_Babylon_Camera.attachControl(camera)(canvas)(true)();
          var light = Graphics_Babylon_Light.createHemisphericLight("light")(Graphics_Babylon_Math_Vector.createVector3(0.0)(1.0)(0.0))(scene)();
          var ground = Graphics_Babylon_Mesh.createGround("ground")({
              width: 50,
              height: 50
          })(scene)();
          var greenMat = Graphics_Babylon_Material.createStandardMaterial("greenMat")(scene)();
          Graphics_Babylon_Material.setDiffuseColor(greenMat)(Graphics_Babylon_Material.green)();
          Graphics_Babylon_Mesh.setMaterial()(ground)(greenMat)();
          var box = Graphics_Babylon_Mesh.createBox("box")({})(scene)();
          Graphics_Babylon_Mesh.setPosition(box)(Graphics_Babylon_Math_Vector.createVector3(0.0)(0.5)(0.0))();
          Graphics_Babylon_Engine.runRenderLoop(engine)(renderFn)();
          return Data_Unit.unit;
      };
  })();
  exports["runMainScene"] = runMainScene;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Game"] = $PS["Game"] || {};
  var exports = $PS["Game"];
  var Effect_Console = $PS["Effect.Console"];
  var MainScene = $PS["MainScene"];                
  var main = function __do() {
      Effect_Console.log("hello Game top level 2")();
      return MainScene.runMainScene();
  };
  exports["main"] = main;
})(PS);
PS["Game"].main();